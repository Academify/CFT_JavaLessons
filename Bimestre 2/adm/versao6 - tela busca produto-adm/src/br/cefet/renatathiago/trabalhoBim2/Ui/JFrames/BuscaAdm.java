/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.cefet.renatathiago.trabalhoBim2.Ui.JFrames;

import br.cefet.renatathiago.trabalhoBim2.Controle.AdministradorControle;
import br.cefet.renatathiago.trabalhoBim2.Entidade.Administrador;
import br.cefet.renatathiago.trabalhoBim2.Excecoes.DaoException;
import br.cefet.renatathiago.trabalhoBim2.Utilidades.CellRenderer;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class BuscaAdm extends javax.swing.JFrame {

    private AdministradorControle admControle = new AdministradorControle();
    private DefaultTableModel modeloTabela;
    private Administrador adm = new Administrador();
    private List<Administrador> lista = new ArrayList();
    
    public BuscaAdm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FiltroAdmLabel1 = new javax.swing.JLabel();
        PadraoFiltroAdmLabel1 = new javax.swing.JLabel();
        FiltroAdmCBox1 = new javax.swing.JComboBox<>();
        BotaoVoltarMenu1 = new javax.swing.JButton();
        PadraoFiltroAdmJTF1 = new javax.swing.JTextField();
        BotaoSelecionarAdm1 = new javax.swing.JButton();
        AdmScrollPanel1 = new javax.swing.JScrollPane();
        TabelaAdm1 = new javax.swing.JTable();
        BotaoFiltrarAdm1 = new javax.swing.JButton();
        FiltroAdmLabel = new javax.swing.JLabel();
        PadraoFiltroAdmLabel = new javax.swing.JLabel();
        FiltroAdmCBox = new javax.swing.JComboBox<>();
        BotaoVoltarMenu = new javax.swing.JButton();
        PadraoFiltroAdmJTF = new javax.swing.JTextField();
        BotaoSelecionarAdm = new javax.swing.JButton();
        AdmScrollPanel = new javax.swing.JScrollPane();
        TabelaAdm = new javax.swing.JTable();
        BotaoFiltrarAdm = new javax.swing.JButton();

        FiltroAdmLabel1.setText("Filtrar por:");

        PadraoFiltroAdmLabel1.setText("Igual a:");

        FiltroAdmCBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nenhum", "Nome", "C贸digo" }));
        FiltroAdmCBox1.setToolTipText("");

        BotaoVoltarMenu1.setText("Voltar");

        BotaoSelecionarAdm1.setText("Selecionar");

        TabelaAdm1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "C贸digo", "Nome", "Telefone", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaAdm1.setColumnSelectionAllowed(true);
        TabelaAdm1.getTableHeader().setReorderingAllowed(false);
        AdmScrollPanel1.setViewportView(TabelaAdm1);

        BotaoFiltrarAdm1.setText("Filtrar");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        FiltroAdmLabel.setText("Filtrar por:");

        PadraoFiltroAdmLabel.setText("Igual a:");

        FiltroAdmCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nenhum", "Nome", "C贸digo" }));
        FiltroAdmCBox.setToolTipText("");

        BotaoVoltarMenu.setText("Voltar");
        BotaoVoltarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoVoltarMenuActionPerformed(evt);
            }
        });

        PadraoFiltroAdmJTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PadraoFiltroAdmJTFActionPerformed(evt);
            }
        });

        BotaoSelecionarAdm.setText("Selecionar");
        BotaoSelecionarAdm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoSelecionarAdmActionPerformed(evt);
            }
        });

        TabelaAdm.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "C贸digo", "Nome", "Telefone", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaAdm.setColumnSelectionAllowed(true);
        TabelaAdm.getTableHeader().setReorderingAllowed(false);
        AdmScrollPanel.setViewportView(TabelaAdm);

        BotaoFiltrarAdm.setText("Filtrar");
        BotaoFiltrarAdm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoFiltrarAdmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(BotaoSelecionarAdm)
                            .addGap(18, 18, 18)
                            .addComponent(BotaoVoltarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(FiltroAdmLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(FiltroAdmCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(PadraoFiltroAdmLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(PadraoFiltroAdmJTF, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(BotaoFiltrarAdm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(AdmScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FiltroAdmLabel)
                    .addComponent(FiltroAdmCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PadraoFiltroAdmLabel)
                    .addComponent(PadraoFiltroAdmJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotaoFiltrarAdm))
                .addGap(18, 18, 18)
                .addComponent(AdmScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotaoVoltarMenu)
                    .addComponent(BotaoSelecionarAdm))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PadraoFiltroAdmJTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PadraoFiltroAdmJTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PadraoFiltroAdmJTFActionPerformed

    private void BotaoSelecionarAdmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoSelecionarAdmActionPerformed
        CUDAdm cudAdm = new CUDAdm();

        try {
            adm = admControle.consultarPorCod((int) TabelaAdm.getValueAt(TabelaAdm.getSelectedRow(), 0));
            dispose();
            cudAdm.setVisible(true);
            cudAdm.exibirDados(adm);
            cudAdm.desabilitarBotaoCadastrar();

        } catch (DaoException ex) {
            Logger.getLogger(CUDAdm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoSelecionarAdmActionPerformed

    private void BotaoFiltrarAdmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoFiltrarAdmActionPerformed
         try {
            switch(FiltroAdmCBox.getSelectedIndex()){
                case 0:
                preencherTabela(admControle.consultarTodos());
                break;
                case 1:
                preencherTabela(admControle.consultarPorNome(PadraoFiltroAdmJTF.getText()));
                break;
                case 2:
                lista.add(admControle.consultarPorCod(Integer.parseInt(PadraoFiltroAdmJTF.getText())));
                preencherTabela(lista);
                lista.clear();                
                break;
            }
        } catch (DaoException ex) {
            Logger.getLogger(CUDProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoFiltrarAdmActionPerformed

    private void BotaoVoltarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoVoltarMenuActionPerformed
        dispose();
    }//GEN-LAST:event_BotaoVoltarMenuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane AdmScrollPanel;
    private javax.swing.JScrollPane AdmScrollPanel1;
    private javax.swing.JButton BotaoFiltrarAdm;
    private javax.swing.JButton BotaoFiltrarAdm1;
    private javax.swing.JButton BotaoSelecionarAdm;
    private javax.swing.JButton BotaoSelecionarAdm1;
    private javax.swing.JButton BotaoVoltarMenu;
    private javax.swing.JButton BotaoVoltarMenu1;
    private javax.swing.JComboBox<String> FiltroAdmCBox;
    private javax.swing.JComboBox<String> FiltroAdmCBox1;
    private javax.swing.JLabel FiltroAdmLabel;
    private javax.swing.JLabel FiltroAdmLabel1;
    private javax.swing.JTextField PadraoFiltroAdmJTF;
    private javax.swing.JTextField PadraoFiltroAdmJTF1;
    private javax.swing.JLabel PadraoFiltroAdmLabel;
    private javax.swing.JLabel PadraoFiltroAdmLabel1;
    private javax.swing.JTable TabelaAdm;
    private javax.swing.JTable TabelaAdm1;
    // End of variables declaration//GEN-END:variables

    void preencherTabela(List<Administrador> listaAdm) throws DaoException {
        
        TabelaAdm.setDefaultRenderer(Object.class, new CellRenderer());        
        modeloTabela = (DefaultTableModel) TabelaAdm.getModel();   
        while (modeloTabela.getRowCount() > 0) {
            modeloTabela.removeRow(0);
        }
        for (int i = 0; i<listaAdm.size(); i++) {
            modeloTabela.addRow(new Object[] { 
              listaAdm.get(i).getCod(),
              listaAdm.get(i).getNome(), 
              listaAdm.get(i).getTelefone(), 
              listaAdm.get(i).getEmail()
            });
        }
    } 

    void consultarTodos() throws DaoException {
        preencherTabela(admControle.consultarTodos());
    }

}
