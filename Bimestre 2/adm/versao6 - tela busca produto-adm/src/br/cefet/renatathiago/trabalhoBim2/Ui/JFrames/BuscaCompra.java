/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.cefet.renatathiago.trabalhoBim2.Ui.JFrames;
import br.cefet.renatathiago.trabalhoBim2.Controle.CompraControle;
import br.cefet.renatathiago.trabalhoBim2.Controle.FornecedorControle;
import br.cefet.renatathiago.trabalhoBim2.Entidade.Compra;
import br.cefet.renatathiago.trabalhoBim2.Entidade.Compra;
import br.cefet.renatathiago.trabalhoBim2.Entidade.ProdutoCV;
import br.cefet.renatathiago.trabalhoBim2.Excecoes.DaoException;
import br.cefet.renatathiago.trabalhoBim2.Utilidades.CellRenderer;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Thiago
 */
public class BuscaCompra extends javax.swing.JFrame {

    Compra compra = new Compra();
    CompraControle cControle = new CompraControle();
    List<Compra> listaCompra = new ArrayList();
    RealizarCompraJFrame realizarCompra = new RealizarCompraJFrame();
    private DefaultTableModel modeloTabelaCompra;
    private DefaultTableModel modeloTabelaCompraProduto;
    FornecedorControle fControle = new FornecedorControle();
    List<ProdutoCV> listaProdutoCV = new ArrayList();
    
    public BuscaCompra() {
        initComponents();
        CodCompraJTF.setEnabled(false);
        NomeFornecedorJTF.setEnabled(false);
        CodFornecedorJTF.setEnabled(false);
        DataCompraJFTF.setEnabled(false);
        FormaPgDinheiroRB.setEnabled(false);
        FormaPgCartaoRB.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PadraoFiltroCompraJTF = new javax.swing.JTextField();
        BotaoCadastroCompra = new javax.swing.JButton();
        BotaoFiltrarCompra = new javax.swing.JButton();
        FiltroCompraLabel = new javax.swing.JLabel();
        BotaoExcluirCompra = new javax.swing.JButton();
        FiltroCompraCBox = new javax.swing.JComboBox<>();
        BotaoVoltarMenu = new javax.swing.JButton();
        CodFornecedorLabel = new javax.swing.JLabel();
        BotaoSelecionarCompra = new javax.swing.JButton();
        CodFornecedorJTF = new javax.swing.JTextField();
        CodCompraLabel = new javax.swing.JLabel();
        CodCompraJTF = new javax.swing.JTextField();
        PadraoFiltroCompraLabel = new javax.swing.JLabel();
        CompraScrollPanel = new javax.swing.JScrollPane();
        TabelaCompra = new javax.swing.JTable();
        DataCompraJFTF = new javax.swing.JFormattedTextField();
        DataCompraLabel = new javax.swing.JLabel();
        NomeFornecedorLabel1 = new javax.swing.JLabel();
        NomeFornecedorJTF = new javax.swing.JTextField();
        ComprajScrollPane = new javax.swing.JScrollPane();
        TabelaProdutoCompra = new javax.swing.JTable();
        FormaPgLabel = new javax.swing.JLabel();
        FormaPgDinheiroRB = new javax.swing.JRadioButton();
        FormaPgCartaoRB = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PadraoFiltroCompraJTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PadraoFiltroCompraJTFActionPerformed(evt);
            }
        });

        BotaoCadastroCompra.setText("Nova Compra");
        BotaoCadastroCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoCadastroCompraActionPerformed(evt);
            }
        });

        BotaoFiltrarCompra.setText("Filtrar");
        BotaoFiltrarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoFiltrarCompraActionPerformed(evt);
            }
        });

        FiltroCompraLabel.setText("Filtrar por:");

        BotaoExcluirCompra.setText("Excluir");
        BotaoExcluirCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoExcluirCompraActionPerformed(evt);
            }
        });

        FiltroCompraCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nenhum", "Cód. Fornecedor", "Código" }));
        FiltroCompraCBox.setToolTipText("");
        FiltroCompraCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiltroCompraCBoxActionPerformed(evt);
            }
        });

        BotaoVoltarMenu.setText("Voltar");
        BotaoVoltarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoVoltarMenuActionPerformed(evt);
            }
        });

        CodFornecedorLabel.setText("Cód. Fornecedor");

        BotaoSelecionarCompra.setText("Selecionar");
        BotaoSelecionarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoSelecionarCompraActionPerformed(evt);
            }
        });

        CodFornecedorJTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodFornecedorJTFActionPerformed(evt);
            }
        });

        CodCompraLabel.setText("Código");

        CodCompraJTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodCompraJTFActionPerformed(evt);
            }
        });

        PadraoFiltroCompraLabel.setText("Igual a:");

        TabelaCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Data", "Valor", "Forma de Pagamento", "Cod Fornecedor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaCompra.setColumnSelectionAllowed(true);
        TabelaCompra.getTableHeader().setReorderingAllowed(false);
        CompraScrollPanel.setViewportView(TabelaCompra);
        TabelaCompra.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (TabelaCompra.getColumnModel().getColumnCount() > 0) {
            TabelaCompra.getColumnModel().getColumn(0).setResizable(false);
            TabelaCompra.getColumnModel().getColumn(1).setResizable(false);
            TabelaCompra.getColumnModel().getColumn(2).setResizable(false);
            TabelaCompra.getColumnModel().getColumn(3).setResizable(false);
            TabelaCompra.getColumnModel().getColumn(4).setResizable(false);
        }

        DataCompraJFTF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        DataCompraJFTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataCompraJFTFActionPerformed(evt);
            }
        });

        DataCompraLabel.setText("Data Compra");

        NomeFornecedorLabel1.setText("Nome Fornecedor");

        NomeFornecedorJTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomeFornecedorJTFActionPerformed(evt);
            }
        });

        TabelaProdutoCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome ", "Marca", "Preço", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ComprajScrollPane.setViewportView(TabelaProdutoCompra);
        if (TabelaProdutoCompra.getColumnModel().getColumnCount() > 0) {
            TabelaProdutoCompra.getColumnModel().getColumn(0).setResizable(false);
            TabelaProdutoCompra.getColumnModel().getColumn(1).setResizable(false);
            TabelaProdutoCompra.getColumnModel().getColumn(2).setResizable(false);
            TabelaProdutoCompra.getColumnModel().getColumn(3).setResizable(false);
            TabelaProdutoCompra.getColumnModel().getColumn(4).setResizable(false);
        }

        FormaPgLabel.setText("Forma de Pagamento");

        FormaPgDinheiroRB.setText("Dinheiro");
        FormaPgDinheiroRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormaPgDinheiroRBActionPerformed(evt);
            }
        });

        FormaPgCartaoRB.setText("Cartão de Débito");
        FormaPgCartaoRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormaPgCartaoRBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(CodFornecedorJTF, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CodFornecedorLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NomeFornecedorJTF)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(NomeFornecedorLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(CodCompraJTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CodCompraLabel, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DataCompraJFTF, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DataCompraLabel)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BotaoCadastroCompra)
                                .addGap(18, 18, 18)
                                .addComponent(BotaoExcluirCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(93, 93, 93)
                                    .addComponent(FormaPgCartaoRB))
                                .addComponent(FormaPgLabel)
                                .addComponent(FormaPgDinheiroRB))
                            .addComponent(ComprajScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 3, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(FiltroCompraLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(FiltroCompraCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PadraoFiltroCompraLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PadraoFiltroCompraJTF, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BotaoFiltrarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BotaoSelecionarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(BotaoVoltarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CompraScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CodCompraLabel)
                            .addComponent(DataCompraLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CodCompraJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DataCompraJFTF, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FiltroCompraCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FiltroCompraLabel)
                            .addComponent(PadraoFiltroCompraLabel)
                            .addComponent(PadraoFiltroCompraJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BotaoFiltrarCompra))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CodFornecedorLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(CodFornecedorJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(NomeFornecedorLabel1)
                                .addGap(8, 8, 8)
                                .addComponent(NomeFornecedorJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FormaPgLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FormaPgDinheiroRB)
                            .addComponent(FormaPgCartaoRB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComprajScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CompraScrollPanel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotaoCadastroCompra)
                    .addComponent(BotaoExcluirCompra)
                    .addComponent(BotaoVoltarMenu)
                    .addComponent(BotaoSelecionarCompra))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PadraoFiltroCompraJTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PadraoFiltroCompraJTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PadraoFiltroCompraJTFActionPerformed

    private void BotaoCadastroCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoCadastroCompraActionPerformed
        realizarCompra.setVisible(true);
    }//GEN-LAST:event_BotaoCadastroCompraActionPerformed

    private void BotaoFiltrarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoFiltrarCompraActionPerformed

        try {
            switch(FiltroCompraCBox.getSelectedIndex()){
                case 0:
                preencherTabela(cControle.consultarCompras());
                break;
                case 1:
                preencherTabela(cControle.consultarCompraPorFornecedor(Integer.parseInt(PadraoFiltroCompraJTF.getText())));
                break;
                case 2:
                listaCompra.add(cControle.consultarPorCod(Integer.parseInt(PadraoFiltroCompraJTF.getText())));
                preencherTabela(listaCompra);
                listaCompra.clear();
                break;
            }
        } catch (DaoException ex) {
            Logger.getLogger(RealizarCompraJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoFiltrarCompraActionPerformed

    private void BotaoExcluirCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoExcluirCompraActionPerformed
        int resposta = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir?", "Excluir Compra", JOptionPane.YES_NO_OPTION);

        if (resposta == JOptionPane.YES_OPTION) {
            try {
                cControle.excluirCompra(Integer.parseInt(CodCompraJTF.getText()));
                limparDados();
                preencherTabela(cControle.consultarCompras());
            } catch (DaoException ex) {
                Logger.getLogger(RealizarCompraJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_BotaoExcluirCompraActionPerformed

    private void FiltroCompraCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiltroCompraCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FiltroCompraCBoxActionPerformed

    private void BotaoVoltarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoVoltarMenuActionPerformed
        dispose();
    }//GEN-LAST:event_BotaoVoltarMenuActionPerformed

    private void BotaoSelecionarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoSelecionarCompraActionPerformed
        try {
            compra = cControle.consultarPorCod((int) TabelaCompra.getValueAt(TabelaCompra.getSelectedRow(), 0));
            exibirDados(compra);
            BotaoCadastroCompra.setEnabled(false);
            exibirProdutos(compra);

        } catch (DaoException ex) {
            Logger.getLogger(RealizarCompraJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoSelecionarCompraActionPerformed

    private void CodFornecedorJTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodFornecedorJTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CodFornecedorJTFActionPerformed

    private void CodCompraJTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodCompraJTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CodCompraJTFActionPerformed

    private void DataCompraJFTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataCompraJFTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DataCompraJFTFActionPerformed

    private void FormaPgCartaoRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormaPgCartaoRBActionPerformed
        if(FormaPgCartaoRB.isSelected()){
            FormaPgDinheiroRB.setSelected(false);
        }
    }//GEN-LAST:event_FormaPgCartaoRBActionPerformed

    private void FormaPgDinheiroRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormaPgDinheiroRBActionPerformed
        if(FormaPgDinheiroRB.isSelected()){
            FormaPgCartaoRB.setSelected(false);
        }
    }//GEN-LAST:event_FormaPgDinheiroRBActionPerformed

    private void NomeFornecedorJTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomeFornecedorJTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomeFornecedorJTFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuscaCompra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoCadastroCompra;
    private javax.swing.JButton BotaoExcluirCompra;
    private javax.swing.JButton BotaoFiltrarCompra;
    private javax.swing.JButton BotaoSelecionarCompra;
    private javax.swing.JButton BotaoVoltarMenu;
    private javax.swing.JTextField CodCompraJTF;
    private javax.swing.JLabel CodCompraLabel;
    private javax.swing.JTextField CodFornecedorJTF;
    private javax.swing.JLabel CodFornecedorLabel;
    private javax.swing.JScrollPane CompraScrollPanel;
    private javax.swing.JScrollPane ComprajScrollPane;
    private javax.swing.JFormattedTextField DataCompraJFTF;
    private javax.swing.JLabel DataCompraLabel;
    private javax.swing.JComboBox<String> FiltroCompraCBox;
    private javax.swing.JLabel FiltroCompraLabel;
    private javax.swing.JRadioButton FormaPgCartaoRB;
    private javax.swing.JRadioButton FormaPgDinheiroRB;
    private javax.swing.JLabel FormaPgLabel;
    private javax.swing.JTextField NomeFornecedorJTF;
    private javax.swing.JLabel NomeFornecedorLabel1;
    private javax.swing.JTextField PadraoFiltroCompraJTF;
    private javax.swing.JLabel PadraoFiltroCompraLabel;
    private javax.swing.JTable TabelaCompra;
    private javax.swing.JTable TabelaProdutoCompra;
    // End of variables declaration//GEN-END:variables
 

    void desabilitarBotaoExcluir() {
        BotaoExcluirCompra.setEnabled(false);
    }
    void desabilitarBotaoSelecionar() {
        BotaoSelecionarCompra.setEnabled(false);
    }
    void consultarTodos() throws DaoException {
        preencherTabela(cControle.consultarCompras());
    }
    void habilitarBotaoExcluir() {
        BotaoExcluirCompra.setEnabled(true);
    }
    void habilitarBotaoSelecionar() {
        BotaoSelecionarCompra.setEnabled(true);
    }
 void exibirDados(Compra a) throws DaoException {
        
        CodCompraJTF.setText(Integer.toString(a.getCod()));
        DataCompraJFTF.setText(a.getData());
        CodFornecedorJTF.setText(Integer.toString(a.getCodFornecedor()));
        NomeFornecedorJTF.setText(fControle.consultarPorCod(a.getCodFornecedor()).getNome());
        if(a.getFormaPg().equals("C")){
            FormaPgCartaoRB.setSelected(true);
            FormaPgDinheiroRB.setSelected(false);
        }else{
            FormaPgDinheiroRB.setSelected(true);
            FormaPgCartaoRB.setSelected(false);
        }
        BotaoExcluirCompra.setEnabled(true);
    }
    

     void limparDados() {
        CodCompraJTF.setText("");
        DataCompraJFTF.setText("");
        CodFornecedorJTF.setText("");
        NomeFornecedorJTF.setText("");
        BotaoExcluirCompra.setEnabled(false);
        BotaoCadastroCompra.setEnabled(false);
        listaProdutoCV.clear();
        preencherTabelaProdutos(listaProdutoCV);
    }
    
    void definirCod() throws DaoException{
        try {
            CodCompraJTF.setText(Integer.toString(cControle.proximoCod()));
        } catch (DaoException ex) {
            Logger.getLogger(RealizarCompraJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     void preencherTabela(List<Compra> listaCompra) throws DaoException {
        
        TabelaCompra.setDefaultRenderer(Object.class, new CellRenderer());        
        modeloTabelaCompra = (DefaultTableModel) TabelaCompra.getModel();   
        while (modeloTabelaCompra.getRowCount() > 0) {
            modeloTabelaCompra.removeRow(0);
        }
        for (int i = 0; i<listaCompra.size(); i++) {
            modeloTabelaCompra.addRow(new Object[] { 
              listaCompra.get(i).getCod(),
              listaCompra.get(i).getData(),
              listaCompra.get(i).getValorTotal(),
              listaCompra.get(i).getFormaPg(),
              listaCompra.get(i).getCodFornecedor()
            });
        }
     }
       private boolean validarCompra(Compra c) {
        if (c.getValorTotal()> 0 && (c.getFormaPg().equals("D") || c.getFormaPg().equals("C"))){
            return true;
        } else {
            return false;
        }
    }
      void preencherTabelaProdutos(List<ProdutoCV> lista){
           TabelaProdutoCompra.setDefaultRenderer(Object.class, new CellRenderer());        
        modeloTabelaCompraProduto = (DefaultTableModel) TabelaProdutoCompra.getModel();   
        while (modeloTabelaCompraProduto.getRowCount() > 0) {
            modeloTabelaCompraProduto.removeRow(0);
        }
        for (int i = 0; i<lista.size(); i++) {
            modeloTabelaCompraProduto.addRow(new Object[] { 
              lista.get(i).getCod(),
              lista.get(i).getNome(),
              lista.get(i).getMarca(),
              lista.get(i).getPrecoCompra(),
              lista.get(i).getQtd()
            });
        }
       }

    private void exibirProdutos(Compra compra) throws DaoException {
        preencherTabelaProdutos(cControle.consultarProdutos(compra.getCod()));
    }
     
}
