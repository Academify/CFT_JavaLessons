/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.cefet.renatathiago.trabalhoBim2.Ui.JFrames;

import br.cefet.renatathiago.trabalhoBim2.Controle.FornecedorControle;
import br.cefet.renatathiago.trabalhoBim2.Entidade.Fornecedor;
import br.cefet.renatathiago.trabalhoBim2.Excecoes.DaoException;
import br.cefet.renatathiago.trabalhoBim2.Utilidades.CellRenderer;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class FornecedorJFrame extends javax.swing.JFrame {

    private FornecedorControle fControle = new FornecedorControle();
    private DefaultTableModel modeloTabela;
    private List<Fornecedor> lista = new ArrayList();
    private Fornecedor forn = new Fornecedor();

    public FornecedorJFrame() {
        initComponents();
        CodFornecedorJTF.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PadraoFiltroFornecedorLabel = new javax.swing.JLabel();
        PadraoFiltroFornecedorJTF = new javax.swing.JTextField();
        FoneFornecedorLabel = new javax.swing.JLabel();
        BotaoFiltrarFornecedor = new javax.swing.JButton();
        FoneFornecedorJTF = new javax.swing.JTextField();
        CnpjFornecedorLabel = new javax.swing.JLabel();
        CnpjFornecedorJTF = new javax.swing.JTextField();
        BotaoVoltarMenu = new javax.swing.JButton();
        BotaoSelecionarFornecedor = new javax.swing.JButton();
        CodFornecedorLabel = new javax.swing.JLabel();
        CodFornecedorJTF = new javax.swing.JTextField();
        FornecedorScrollPanel = new javax.swing.JScrollPane();
        TabelaFornecedor = new javax.swing.JTable();
        BotaoCadastroFornecedor = new javax.swing.JButton();
        BotaoEditarFornecedor = new javax.swing.JButton();
        FiltroFornecedorLabel = new javax.swing.JLabel();
        BotaoExcluirFornecedor = new javax.swing.JButton();
        FiltroFornecedorCBox = new javax.swing.JComboBox<>();
        NomeFornecedorLabel = new javax.swing.JLabel();
        NomeFornecedorJTF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PadraoFiltroFornecedorLabel.setText("Igual a:");

        PadraoFiltroFornecedorJTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PadraoFiltroFornecedorJTFActionPerformed(evt);
            }
        });

        FoneFornecedorLabel.setText("Telefone");

        BotaoFiltrarFornecedor.setText("Filtrar");
        BotaoFiltrarFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoFiltrarFornecedorActionPerformed(evt);
            }
        });

        CnpjFornecedorLabel.setText("CNPJ");

        BotaoVoltarMenu.setText("Voltar");
        BotaoVoltarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoVoltarMenuActionPerformed(evt);
            }
        });

        BotaoSelecionarFornecedor.setText("Selecionar");
        BotaoSelecionarFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoSelecionarFornecedorActionPerformed(evt);
            }
        });

        CodFornecedorLabel.setText("Código");

        CodFornecedorJTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodFornecedorJTFActionPerformed(evt);
            }
        });

        TabelaFornecedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "Telefone", "Cnpj"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaFornecedor.setColumnSelectionAllowed(true);
        TabelaFornecedor.getTableHeader().setReorderingAllowed(false);
        FornecedorScrollPanel.setViewportView(TabelaFornecedor);
        TabelaFornecedor.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (TabelaFornecedor.getColumnModel().getColumnCount() > 0) {
            TabelaFornecedor.getColumnModel().getColumn(0).setResizable(false);
            TabelaFornecedor.getColumnModel().getColumn(1).setResizable(false);
            TabelaFornecedor.getColumnModel().getColumn(2).setResizable(false);
            TabelaFornecedor.getColumnModel().getColumn(3).setResizable(false);
        }

        BotaoCadastroFornecedor.setText("Cadastrar");
        BotaoCadastroFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoCadastroFornecedorActionPerformed(evt);
            }
        });

        BotaoEditarFornecedor.setText("Salvar");
        BotaoEditarFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoEditarFornecedorActionPerformed(evt);
            }
        });

        FiltroFornecedorLabel.setText("Filtrar por:");

        BotaoExcluirFornecedor.setText("Excluir");
        BotaoExcluirFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoExcluirFornecedorActionPerformed(evt);
            }
        });

        FiltroFornecedorCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nenhum", "Nome", "Código" }));
        FiltroFornecedorCBox.setToolTipText("");
        FiltroFornecedorCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiltroFornecedorCBoxActionPerformed(evt);
            }
        });

        NomeFornecedorLabel.setText("Nome Completo");

        NomeFornecedorJTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomeFornecedorJTFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(NomeFornecedorLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FoneFornecedorLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CodFornecedorLabel, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NomeFornecedorJTF)
                            .addComponent(CodFornecedorJTF)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(FoneFornecedorJTF, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CnpjFornecedorLabel)
                                    .addComponent(CnpjFornecedorJTF)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BotaoCadastroFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BotaoEditarFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BotaoExcluirFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 50, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(FiltroFornecedorLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(FiltroFornecedorCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PadraoFiltroFornecedorLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PadraoFiltroFornecedorJTF, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BotaoFiltrarFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BotaoSelecionarFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(BotaoVoltarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(FornecedorScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CodFornecedorLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CodFornecedorJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(NomeFornecedorLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NomeFornecedorJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FoneFornecedorLabel)
                            .addComponent(CnpjFornecedorLabel))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FoneFornecedorJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CnpjFornecedorJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FiltroFornecedorCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FiltroFornecedorLabel)
                            .addComponent(PadraoFiltroFornecedorLabel)
                            .addComponent(PadraoFiltroFornecedorJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BotaoFiltrarFornecedor))
                        .addGap(18, 18, 18)
                        .addComponent(FornecedorScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotaoCadastroFornecedor)
                    .addComponent(BotaoEditarFornecedor)
                    .addComponent(BotaoExcluirFornecedor)
                    .addComponent(BotaoVoltarMenu)
                    .addComponent(BotaoSelecionarFornecedor))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PadraoFiltroFornecedorJTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PadraoFiltroFornecedorJTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PadraoFiltroFornecedorJTFActionPerformed

    private void BotaoFiltrarFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoFiltrarFornecedorActionPerformed

        try {
            switch(FiltroFornecedorCBox.getSelectedIndex()){
                case 0:
                preencherTabela(fControle.consultarTodos());
                break;
                case 1:
                preencherTabela(fControle.consultarPorNome(PadraoFiltroFornecedorJTF.getText()));
                break;
                case 2:
                lista.add(fControle.consultarPorCod(Integer.parseInt(PadraoFiltroFornecedorJTF.getText())));
                preencherTabela(lista);
                lista.clear();
                break;
            }
        } catch (DaoException ex) {
            Logger.getLogger(FornecedorJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoFiltrarFornecedorActionPerformed

    private void BotaoVoltarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoVoltarMenuActionPerformed
        dispose();
    }//GEN-LAST:event_BotaoVoltarMenuActionPerformed

    private void BotaoSelecionarFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoSelecionarFornecedorActionPerformed
        try {
            forn = fControle.consultarPorCod((int) TabelaFornecedor.getValueAt(TabelaFornecedor.getSelectedRow(), 0));
            exibirDados(forn);
            habilitarJTF();
            BotaoCadastroFornecedor.setEnabled(false);
            BotaoEditarFornecedor.setEnabled(true);
            
            
        } catch (DaoException ex) {
            Logger.getLogger(FornecedorJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoSelecionarFornecedorActionPerformed

    private void CodFornecedorJTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodFornecedorJTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CodFornecedorJTFActionPerformed

    private void BotaoCadastroFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoCadastroFornecedorActionPerformed

        forn.setCnpj(CnpjFornecedorJTF.getText());

        forn.setNome(NomeFornecedorJTF.getText());
        forn.setTelefone(FoneFornecedorJTF.getText());
        try {
            if (validarFornecedor(forn)){
                fControle.inserirFornecedor(forn);
                consultarTodos();
                limparDados();
                definirCod();
                habilitarBotaoCadastrar();
                
            }
        } catch (DaoException ex) {
            Logger.getLogger(FornecedorJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoCadastroFornecedorActionPerformed

    private void BotaoEditarFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoEditarFornecedorActionPerformed
        forn.setCod(Integer.parseInt(CodFornecedorJTF.getText()));
        forn.setCnpj(CnpjFornecedorJTF.getText());
        forn.setNome(NomeFornecedorJTF.getText());
        forn.setTelefone(FoneFornecedorJTF.getText());
        try {
            if (validarFornecedor(forn)){
                fControle.alterarFornecedor(Integer.parseInt(CodFornecedorJTF.getText()), forn);
                consultarTodos();
                limparDados();
                definirCod();
                BotaoEditarFornecedor.setEnabled(false);
                BotaoCadastroFornecedor.setEnabled(true);
            }
        } catch (DaoException ex) {
            Logger.getLogger(FornecedorJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoEditarFornecedorActionPerformed

    private void BotaoExcluirFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoExcluirFornecedorActionPerformed
        int resposta = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir?", "Excluir Fornecedor", JOptionPane.YES_NO_OPTION);

        if (resposta == JOptionPane.YES_OPTION) {
            try {
                fControle.excluirFornecedor(Integer.parseInt(CodFornecedorJTF.getText()));
                limparDados();
                consultarTodos();
                definirCod();
                habilitarBotaoCadastrar();
            } catch (DaoException ex) {
                Logger.getLogger(FornecedorJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_BotaoExcluirFornecedorActionPerformed

    private void FiltroFornecedorCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiltroFornecedorCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FiltroFornecedorCBoxActionPerformed

    private void NomeFornecedorJTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomeFornecedorJTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomeFornecedorJTFActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoCadastroFornecedor;
    private javax.swing.JButton BotaoEditarFornecedor;
    private javax.swing.JButton BotaoExcluirFornecedor;
    private javax.swing.JButton BotaoFiltrarFornecedor;
    private javax.swing.JButton BotaoSelecionarFornecedor;
    private javax.swing.JButton BotaoVoltarMenu;
    private javax.swing.JTextField CnpjFornecedorJTF;
    private javax.swing.JLabel CnpjFornecedorLabel;
    private javax.swing.JTextField CodFornecedorJTF;
    private javax.swing.JLabel CodFornecedorLabel;
    private javax.swing.JComboBox<String> FiltroFornecedorCBox;
    private javax.swing.JLabel FiltroFornecedorLabel;
    private javax.swing.JTextField FoneFornecedorJTF;
    private javax.swing.JLabel FoneFornecedorLabel;
    private javax.swing.JScrollPane FornecedorScrollPanel;
    private javax.swing.JTextField NomeFornecedorJTF;
    private javax.swing.JLabel NomeFornecedorLabel;
    private javax.swing.JTextField PadraoFiltroFornecedorJTF;
    private javax.swing.JLabel PadraoFiltroFornecedorLabel;
    private javax.swing.JTable TabelaFornecedor;
    // End of variables declaration//GEN-END:variables

void desabilitarBotaoCadastrar() {
        BotaoCadastroFornecedor.setEnabled(false);
    }

    void desabilitarBotaoEditar() {
        BotaoEditarFornecedor.setEnabled(false);
    }

    void desabilitarBotaoExcluir() {
        BotaoExcluirFornecedor.setEnabled(false);
    }
    void desabilitarBotaoSelecionar() {
        BotaoSelecionarFornecedor.setEnabled(false);
    }
    
    void habilitarBotaoCadastrar() {
        BotaoCadastroFornecedor.setEnabled(true);
    }

    void habilitarBotaoEditar() {
        BotaoEditarFornecedor.setEnabled(true);
    }

    void habilitarBotaoExcluir() {
        BotaoExcluirFornecedor.setEnabled(true);
    }
    void habilitarBotaoSelecionar() {
        BotaoSelecionarFornecedor.setEnabled(true);
    }
    void desabilitarJTF(){
        NomeFornecedorJTF.setEnabled(false);
        FoneFornecedorJTF.setEnabled(false);
        CnpjFornecedorJTF.setEnabled(false);
    }
    void habilitarJTF(){
        NomeFornecedorJTF.setEnabled(true);
        FoneFornecedorJTF.setEnabled(true);
        CnpjFornecedorJTF.setEnabled(true);
    }

    void preencherTabela(List<Fornecedor> listaFornecedor) throws DaoException {
        
        TabelaFornecedor.setDefaultRenderer(Object.class, new CellRenderer());        
        modeloTabela = (DefaultTableModel) TabelaFornecedor.getModel();   
        while (modeloTabela.getRowCount() > 0) {
            modeloTabela.removeRow(0);
        }
        for (int i = 0; i<listaFornecedor.size(); i++) {
            modeloTabela.addRow(new Object[] { 
              listaFornecedor.get(i).getCod(),
              listaFornecedor.get(i).getNome(), 
              listaFornecedor.get(i).getTelefone(), 
              listaFornecedor.get(i).getCnpj()
            });
        }
    } 

    void consultarTodos() throws DaoException {
        preencherTabela(fControle.consultarTodos());
    }

     void exibirDados(Fornecedor a) {
        NomeFornecedorJTF.setText(a.getNome());
        CodFornecedorJTF.setText(Integer.toString(a.getCod()));
        FoneFornecedorJTF.setText(a.getTelefone());
        CnpjFornecedorJTF.setText(a.getCnpj());
        BotaoExcluirFornecedor.setEnabled(true);
    }

     void limparDados() {
        NomeFornecedorJTF.setText("");
        CodFornecedorJTF.setText("");
        FoneFornecedorJTF.setText("");
        CnpjFornecedorJTF.setText("");
        BotaoExcluirFornecedor.setEnabled(false);
        BotaoCadastroFornecedor.setEnabled(false);
        BotaoEditarFornecedor.setEnabled(false);
    }
    
    void definirCod() throws DaoException{
        try {
            CodFornecedorJTF.setText(Integer.toString(fControle.proximoCod()));
        } catch (DaoException ex) {
            Logger.getLogger(FornecedorJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean validarFornecedor(Fornecedor a) {
        if (a.getNome().length()>=2 && 
        a.getCnpj().length()>=11 && 
        a.getTelefone().length()>=8){
            return true;
        } else {
            return false;
        }
    }

}
