/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.cefet.renatathiago.trabalhoBim2.Ui.JFrames;

import br.cefet.renatathiago.trabalhoBim2.Dao.ProdutoDao;
import br.cefet.renatathiago.trabalhoBim2.Entidade.Produto;
import br.cefet.renatathiago.trabalhoBim2.Excecoes.DaoException;
import br.cefet.renatathiago.trabalhoBim2.Utilidades.CellRenderer;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class BuscaProduto extends javax.swing.JDialog {

    private DefaultTableModel modeloTabela;
    private Produto p = new Produto();
    private ProdutoDao pDao = new ProdutoDao();
    private List<Produto> lista = new ArrayList();
    
    public BuscaProduto(java.awt.Frame parent, boolean modal) {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BotaoSelecionarProduto = new javax.swing.JButton();
        PadraoFiltroProdutoLabel = new javax.swing.JLabel();
        ProdutoScrollPanel = new javax.swing.JScrollPane();
        TabelaProduto = new javax.swing.JTable();
        PadraoFiltroProdutoJTF = new javax.swing.JTextField();
        BotaoFiltrarProduto = new javax.swing.JButton();
        FiltroProdutoLabel = new javax.swing.JLabel();
        FiltroProdutoCBox = new javax.swing.JComboBox<>();
        BotaoVoltarMenu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        BotaoSelecionarProduto.setText("Selecionar");
        BotaoSelecionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoSelecionarProdutoActionPerformed(evt);
            }
        });

        PadraoFiltroProdutoLabel.setText("Igual a:");

        TabelaProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "Marca", "Qtd Estoque", "Preço Venda"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaProduto.setColumnSelectionAllowed(true);
        TabelaProduto.getTableHeader().setReorderingAllowed(false);
        ProdutoScrollPanel.setViewportView(TabelaProduto);

        PadraoFiltroProdutoJTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PadraoFiltroProdutoJTFActionPerformed(evt);
            }
        });
        PadraoFiltroProdutoJTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PadraoFiltroProdutoJTFKeyPressed(evt);
            }
        });

        BotaoFiltrarProduto.setText("Filtrar");
        BotaoFiltrarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoFiltrarProdutoActionPerformed(evt);
            }
        });

        FiltroProdutoLabel.setText("Filtrar por:");

        FiltroProdutoCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nenhum", "Código", "Nome", "Marca" }));
        FiltroProdutoCBox.setToolTipText("");
        FiltroProdutoCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiltroProdutoCBoxActionPerformed(evt);
            }
        });

        BotaoVoltarMenu.setText("Voltar");
        BotaoVoltarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoVoltarMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(FiltroProdutoLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(FiltroProdutoCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(PadraoFiltroProdutoLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(PadraoFiltroProdutoJTF, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(BotaoFiltrarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(BotaoSelecionarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(36, 36, 36)
                            .addComponent(BotaoVoltarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(ProdutoScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(FiltroProdutoCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FiltroProdutoLabel)
                        .addComponent(PadraoFiltroProdutoLabel)
                        .addComponent(PadraoFiltroProdutoJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BotaoFiltrarProduto))
                    .addGap(18, 18, 18)
                    .addComponent(ProdutoScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BotaoVoltarMenu)
                        .addComponent(BotaoSelecionarProduto))
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public Produto getProduto(){
        return p;
    }
    private void BotaoSelecionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoSelecionarProdutoActionPerformed
        try {
            p = pDao.consultarPorCod((int) TabelaProduto.getValueAt(TabelaProduto.getSelectedRow(), 0));
            setVisible(false);
        } catch (DaoException ex) {
            Logger.getLogger(CUDProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoSelecionarProdutoActionPerformed

    private void PadraoFiltroProdutoJTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PadraoFiltroProdutoJTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PadraoFiltroProdutoJTFActionPerformed

    private void BotaoFiltrarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoFiltrarProdutoActionPerformed

        try {
            switch(FiltroProdutoCBox.getSelectedIndex()){
                case 0:
                preencherTabela(pDao.consultarTodos());
                break;
                case 1:
                lista.add(pDao.consultarPorCod(Integer.parseInt(PadraoFiltroProdutoJTF.getText())));
                preencherTabela(lista);
                lista.clear();
                break;
                case 2:
                preencherTabela(pDao.consultarPorNome(PadraoFiltroProdutoJTF.getText()));
                break;
                case 3:
                preencherTabela(pDao.consultarPorMarca(PadraoFiltroProdutoJTF.getText()));
            }
        } catch (DaoException ex) {
            Logger.getLogger(CUDProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoFiltrarProdutoActionPerformed

    private void FiltroProdutoCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiltroProdutoCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FiltroProdutoCBoxActionPerformed

    private void BotaoVoltarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoVoltarMenuActionPerformed
        setVisible(false);
    }//GEN-LAST:event_BotaoVoltarMenuActionPerformed

    private void PadraoFiltroProdutoJTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PadraoFiltroProdutoJTFKeyPressed
        if (evt.getKeyCode()==10){
            try {
            switch(FiltroProdutoCBox.getSelectedIndex()){
                case 0:
                preencherTabela(pDao.consultarTodos());
                break;
                case 1:
                lista.add(pDao.consultarPorCod(Integer.parseInt(PadraoFiltroProdutoJTF.getText())));
                preencherTabela(lista);
                lista.clear();
                break;
                case 2:
                preencherTabela(pDao.consultarPorNome(PadraoFiltroProdutoJTF.getText()));
                break;
                case 3:
                preencherTabela(pDao.consultarPorMarca(PadraoFiltroProdutoJTF.getText()));
            }
        } catch (DaoException ex) {
            Logger.getLogger(CUDProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_PadraoFiltroProdutoJTFKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoFiltrarProduto;
    private javax.swing.JButton BotaoSelecionarProduto;
    private javax.swing.JButton BotaoVoltarMenu;
    private javax.swing.JComboBox<String> FiltroProdutoCBox;
    private javax.swing.JLabel FiltroProdutoLabel;
    private javax.swing.JTextField PadraoFiltroProdutoJTF;
    private javax.swing.JLabel PadraoFiltroProdutoLabel;
    private javax.swing.JScrollPane ProdutoScrollPanel;
    private javax.swing.JTable TabelaProduto;
    // End of variables declaration//GEN-END:variables

    private void preencherTabela(List<Produto> listaProduto) {
        modeloTabela = (DefaultTableModel) TabelaProduto.getModel();   
        while (modeloTabela.getRowCount() > 0) {
            modeloTabela.removeRow(0);
        }
        for (int i = 0; i<listaProduto.size(); i++) {
            modeloTabela.addRow(new Object[] { 
              listaProduto.get(i).getCod(),
              listaProduto.get(i).getNome(), 
              listaProduto.get(i).getMarca(), 
              listaProduto.get(i).getQtdEstoque(),
              listaProduto.get(i).getPrecoVenda(),
            });
        }
    }
    
    void consultarTodos() throws DaoException {
        preencherTabela(pDao.consultarTodos());
    }

}
